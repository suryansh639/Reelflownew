To upload a video directly from your frontend to AWS S3 when a user clicks an "Upload" button, you must use pre-signed URLs to securely allow direct uploads without exposing your AWS credentials on the frontend.

ðŸ”§ Setup Requirements
Frontend (HTML + JS) â€“ To select and upload a file.

Backend (Node.js/Python/Flask/etc.) â€“ To generate the S3 pre-signed upload URL.

AWS S3 Bucket â€“ Already created with CORS settings configured.

âœ… Step 1: Set CORS on S3 Bucket
Go to your S3 bucket â†’ Permissions â†’ CORS Configuration and add:

xml
Copy
Edit
<CORSConfiguration>
  <CORSRule>
    <AllowedOrigin>*</AllowedOrigin> <!-- Replace * with your domain for production -->
    <AllowedMethod>PUT</AllowedMethod>
    <AllowedHeader>*</AllowedHeader>
  </CORSRule>
</CORSConfiguration>
âœ… Step 2: Backend â€“ Generate Pre-signed URL (Example in Python with Boto3)
python
Copy
Edit
# presign_url.py
import boto3
from flask import Flask, request, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # Allow frontend requests

s3 = boto3.client('s3')
BUCKET_NAME = 'your-s3-bucket-name'

@app.route('/generate-presigned-url', methods=['POST'])
def generate_presigned_url():
    file_name = request.json['fileName']
    file_type = request.json['fileType']
    
    presigned_url = s3.generate_presigned_url(
        ClientMethod='put_object',
        Params={
            'Bucket': BUCKET_NAME,
            'Key': file_name,
            'ContentType': file_type
        },
        ExpiresIn=3600  # 1 hour
    )
    
    return jsonify({'url': presigned_url})

if __name__ == '__main__':
    app.run(debug=True)
âœ… Step 3: Frontend â€“ HTML + JavaScript
html
Copy
Edit
<!DOCTYPE html>
<html>
<head>
  <title>Upload Video to S3</title>
</head>
<body>
  <h2>Upload Video</h2>
  <input type="file" id="videoFile" accept="video/*">
  <button onclick="uploadVideo()">Upload</button>

  <script>
    async function uploadVideo() {
      const fileInput = document.getElementById('videoFile');
      const file = fileInput.files[0];

      if (!file) {
        alert('Please select a file');
        return;
      }

      const response = await fetch('http://localhost:5000/generate-presigned-url', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          fileName: file.name,
          fileType: file.type
        })
      });

      const data = await response.json();
      const uploadUrl = data.url;

      const upload = await fetch(uploadUrl, {
        method: 'PUT',
        headers: {
          'Content-Type': file.type
        },
        body: file
      });

      if (upload.ok) {
        alert('Upload successful!');
      } else {
        alert('Upload failed.');
      }
    }
  </script>
</body>
</html>
